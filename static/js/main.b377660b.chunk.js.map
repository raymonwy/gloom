{"version":3,"sources":["ClockComponents/DisplayComponents.js","pics/reset.svg","ClockComponents/ButtonComponents.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayComponents","props","time","m","s","ButtonComponents","status","className","title","onClick","start","stop","src","refresh","alt","reset","fiveSeconds","Audio","fifteenSeconds","App","useState","setTime","interv","setInterv","setStatus","updatedM","updatedS","bucket","blink","border","document","getElementById","classList","contains","remove","add","displayReset","style","color","run","testDuration","play","id","clearInterval","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b377660b.chunk.js","sourcesContent":["import '../App.css';\nimport React from 'react';\n\nfunction DisplayComponents(props) {\n    return (  \n        <div >\n            <div >\n                <section >\n                     <span>{(props.time.m >= 10 ? props.time.m :\"0\" + props.time.m)} </span>\n                    <span>: </span>\n                    <span>{(props.time.s >= 10 ? props.time.s :\"0\" + props.time.s)} </span>\n                </section>\n               \n            </div>\n        </div>\n        \n        );\n}\n\nexport default DisplayComponents;","export default __webpack_public_path__ + \"static/media/reset.0f037604.svg\";","\nimport React from 'react';\nimport refresh from '../pics/reset.svg'\n\nfunction ButtonComponents(props) {\n    return (\n       <div>\n           {(props.status === 0)?\n                <div >   \n                <button className=\"playButton\" title=\"play\" onClick ={props.start}  >  </button>\n                </div> : \"\"\n\n         }\n            {(props.status === 1)?\n                <div>\n                    <button className=\"playButton\" title=\"stop\" onClick ={props.stop} >  </button>\n                </div> : \"\"\n            }\n\n            {(props.status === 2)?\n                <div>\n                    <button className=\"playButton\" title=\"resume\" onClick ={props.start} >  </button>\n                </div> : \"\"\n            }\n            \n            {(props.status !== 0)?\n                <div >\n                    <img src={refresh}  className=\"resetButton\" title=\"reset\" alt=\"reset\" onClick ={props.reset}></img>\n                </div> : \"\"\n            }       \n            \n       </div>\n      );\n}\n\nexport default ButtonComponents;\n","import './App.css';\nimport DisplayComponents from './ClockComponents/DisplayComponents.js';\nimport ButtonComponents from './ClockComponents/ButtonComponents.js';\nimport React, {useState} from 'react';\n\nvar fiveSeconds = new Audio('./sounds/fiveSeconds.mp4');\nvar fifteenSeconds = new Audio('./sounds/15Seconds.mp4');\n\nfunction App() {\n  const [time, setTime] = useState({m:30,s:0});\n  const [interv,setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  var updatedM = time.m, updatedS = time.s;\n  var bucket = 0;\n\n  \n  \n  function start(){\n    run();\n    setStatus(1);\n    setInterv(setInterval(run,999));\n  }\n\n  function blink(){\n    var border = document.getElementById(\"border\");\n    (border.classList.contains(\"blink\") ? border.classList.remove(\"blink\") : border.classList.add(\"blink\"));\n  }\n\n  function testDuration(){\n    var border = document.getElementById(\"border\");\n    ( (border.style.color === \"red\" ) ? border.style.color = \"white\" : border.style.color = \"red\");\n  }\n\n  function displayReset(){\n    var border = document.getElementById(\"border\");\n     border.classList.remove(\"blink\");\n     border.style.color = \"white\";\n  }\n\n  \n  function run() {\n    if( updatedM === 0 && updatedS === 0){\n      return;\n    }\n\n    if (updatedS === 0){\n      updatedM--;\n      updatedS = 60;\n    }\n    \n    if (bucket === 57){\n      bucket = 0;\n      blink();\n      testDuration();\n    }\n\n    if (bucket === 52){\n      fiveSeconds.play();\n    }\n\n    if(bucket === 36){\n      displayReset();\n    }\n    if (bucket === 42){\n      fifteenSeconds.play();\n      blink();\n    }\n    updatedS--;\n    bucket++;\n    return setTime({m:updatedM,s:updatedS});\n  }\n\n  function stop(){\n    clearInterval(interv);\n    setStatus(2);\n  }\n  \n  function reset(){\n    clearInterval(interv);\n    setStatus(0);\n    displayReset();\n    return setTime({m:30,s:0});\n  }\n\n  \n  return (\n    <section className=\"timer-container\">\n      <section className=\"timer\">\n       \n        <div id = \"border\" className=\"digits\">\n          <DisplayComponents time = {time}/>\n          \n        </div>\n        \n        <ButtonComponents status = {status} stop = {stop} reset = {reset} start = {start} />\n        \n        </section>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}